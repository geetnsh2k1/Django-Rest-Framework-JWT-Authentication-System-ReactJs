{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\react-redux-rest-framework-authentication-system\\\\redux-authentication-system\\\\src\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useContext } from 'react';\nimport OpenContext from './OpenContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '35ch'\n    }\n  }\n}));\nexport default function SignupForm() {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [helperText, setHelperText] = useState('Confirm Password and Passwrod fields should be same.');\n  const [error, setError] = useState(false);\n  const [usernameError, setUsernameError] = useState(false);\n  const [usernameHelperText, setUsernameHelperText] = useState('');\n  const {\n    setOpen\n  } = useContext(OpenContext);\n\n  const signup = e => {\n    e.preventDefault();\n    var check = false;\n\n    if (username.length < 8) {\n      setUsernameError(true);\n      setUsernameHelperText('Username must consist of 8 characters.');\n      check = true;\n    }\n\n    if (password !== confirm) {\n      setError(true);\n      setHelperText(\"Confirm Password field is not same as the Password field.\");\n      check = true;\n    }\n\n    if (check) return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: signup,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [usernameError ? /*#__PURE__*/_jsxDEV(TextField, {\n        error: true,\n        helperText: usernameHelperText,\n        id: \"outlined-textarea\",\n        label: \"Username\",\n        placeholder: \"username\",\n        variant: \"outlined\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-textarea\",\n        label: \"Username\",\n        placeholder: \"username\",\n        variant: \"outlined\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-password-input\",\n        label: \"Password\",\n        type: \"password\",\n        autoComplete: \"current-password\",\n        variant: \"outlined\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(TextField, {\n        error: true,\n        helperText: helperText,\n        id: \"outlined-confirm-password-input\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        autoComplete: \"current-password\",\n        variant: \"outlined\",\n        placeholder: \"confirm password\",\n        value: confirm,\n        onChange: e => {\n          setConfirm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n        helperText: helperText,\n        id: \"outlined-confirm-password-input\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        autoComplete: \"current-password\",\n        variant: \"outlined\",\n        placeholder: \"confirm password\",\n        value: confirm,\n        onChange: e => {\n          setConfirm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"SIGNUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignupForm, \"9bGA7YR3XIKtU0KFSu82r9RVPC4=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["E:/React/react-redux-rest-framework-authentication-system/redux-authentication-system/src/SignUp.js"],"names":["React","useState","makeStyles","TextField","Button","useContext","OpenContext","useStyles","theme","root","margin","spacing","width","SignupForm","classes","username","setUsername","password","setPassword","confirm","setConfirm","helperText","setHelperText","error","setError","usernameError","setUsernameError","usernameHelperText","setUsernameHelperText","setOpen","signup","e","preventDefault","check","length","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { useContext } from 'react';\r\nimport OpenContext from './OpenContext'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '35ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SignupForm() {\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirm, setConfirm] = useState('')\r\n\r\n  const [helperText, setHelperText] = useState('Confirm Password and Passwrod fields should be same.')\r\n  const [error, setError] = useState(false)\r\n\r\n  const [usernameError, setUsernameError] = useState(false)\r\n  const [usernameHelperText, setUsernameHelperText] = useState('')\r\n\r\n  const { setOpen} = useContext(OpenContext)\r\n\r\n  const signup = (e) => {\r\n    e.preventDefault();\r\n    \r\n    var check = false\r\n\r\n    if(username.length < 8) {\r\n      setUsernameError(true)\r\n      setUsernameHelperText('Username must consist of 8 characters.')\r\n      check = true\r\n    }\r\n\r\n    if(password !== confirm) {\r\n      setError(true)\r\n      setHelperText(\"Confirm Password field is not same as the Password field.\")\r\n      check = true\r\n    }\r\n\r\n    if(check) return\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={signup} className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n      {\r\n        usernameError ? \r\n        <TextField\r\n          error\r\n          helperText = {usernameHelperText}\r\n          id=\"outlined-textarea\"\r\n          label=\"Username\"\r\n          placeholder=\"username\"\r\n          variant=\"outlined\"\r\n          value = {username}\r\n          onChange = {(e) => {setUsername(e.target.value)}}\r\n        /> :\r\n        <TextField\r\n          id=\"outlined-textarea\"\r\n          label=\"Username\"\r\n          placeholder=\"username\"\r\n          variant=\"outlined\"\r\n          value = {username}\r\n          onChange = {(e) => {setUsername(e.target.value)}}\r\n        /> \r\n      }\r\n        <br/>\r\n        <TextField\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          placeholder=\"password\"\r\n          value = {password}\r\n          onChange = {(e) => {setPassword(e.target.value)}}\r\n        />\r\n        <br/>\r\n\r\n        {error ? <TextField\r\n          error\r\n          helperText={helperText}\r\n          id=\"outlined-confirm-password-input\"\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          placeholder=\"confirm password\"\r\n          value = {confirm}\r\n          onChange = {(e) => {setConfirm(e.target.value)}}\r\n        /> : <TextField\r\n        helperText={helperText}\r\n        id=\"outlined-confirm-password-input\"\r\n        label=\"Confirm Password\"\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        variant=\"outlined\"\r\n        placeholder=\"confirm password\"\r\n        value = {confirm}\r\n        onChange = {(e) => {setConfirm(e.target.value)}}\r\n      /> }\r\n\r\n        <br/><br/>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">SIGNUP</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}