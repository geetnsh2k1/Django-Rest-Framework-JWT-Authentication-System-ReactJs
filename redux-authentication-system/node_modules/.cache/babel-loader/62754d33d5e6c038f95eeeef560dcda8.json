{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\redux-authentication-system\\\\src\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useContext, useDispatch } from 'react';\nimport OpenContext from './OpenContext';\nimport { useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from './state/actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '35ch'\n    }\n  }\n}));\nexport default function LoginForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    setOpen\n  } = useContext(OpenContext);\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    AUTH_LOGIN,\n    AUTH_LOGOUT\n  } = bindActionCreators(actionCreators, dispatch);\n\n  const login = e => {\n    e.preventDefault();\n    console.log(username, password); // TEMPORARY LOGIC\n\n    if (username === password) {\n      AUTH_LOGIN({\n        user: \"Geetansh Garg\"\n      });\n      setOpen(false);\n    } else {\n      alert('Invalid Credentials');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: login,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-textarea\",\n        label: \"Username\",\n        placeholder: \"username\",\n        variant: \"outlined\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-password-input\",\n        label: \"Password\",\n        type: \"password\",\n        autoComplete: \"current-password\",\n        variant: \"outlined\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        },\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"k/h4aeMf7zdTRkxmh/oXDLXV+qw=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["E:/React/redux-authentication-system/src/Login.js"],"names":["React","useState","makeStyles","TextField","Button","useContext","useDispatch","OpenContext","useSelector","bindActionCreators","actionCreators","useStyles","theme","root","margin","spacing","width","LoginForm","props","classes","username","setUsername","password","setPassword","setOpen","state","dispatch","AUTH_LOGIN","AUTH_LOGOUT","login","e","preventDefault","console","log","user","alert","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { useContext, useDispatch } from 'react';\r\nimport OpenContext from './OpenContext'\r\nimport { useSelector } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { actionCreators } from './state/actions/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '35ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LoginForm(props) {\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const {setOpen} = useContext(OpenContext)\r\n\r\n  const state = useSelector((state) => state)\r\n\r\n  const dispatch = useDispatch()\r\n  const { AUTH_LOGIN, AUTH_LOGOUT } = bindActionCreators(actionCreators, dispatch)\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    console.log(username, password)\r\n    \r\n    // TEMPORARY LOGIC\r\n    if(username === password) {\r\n      AUTH_LOGIN({user:\"Geetansh Garg\"})\r\n      setOpen(false)\r\n    } else {\r\n      alert('Invalid Credentials')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={login} className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n      <TextField\r\n          id=\"outlined-textarea\"\r\n          label=\"Username\"\r\n          placeholder=\"username\"\r\n          variant=\"outlined\"\r\n          value={username}\r\n          onChange = {(e) => {setUsername(e.target.value)}}\r\n        />\r\n        <br/>\r\n        <TextField\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          value = {password}\r\n          onChange = {(e) => {setPassword(e.target.value)}}\r\n          placeholder=\"password\"\r\n        />\r\n        <br/><br/>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">LOGIN</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}