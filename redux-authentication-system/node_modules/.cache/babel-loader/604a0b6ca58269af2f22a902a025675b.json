{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\react-redux-rest-framework-authentication-system\\\\redux-authentication-system\\\\src\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useContext } from 'react';\nimport OpenContext from './OpenContext';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport actionCreators from \"./state/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '35ch'\n    }\n  }\n}));\nexport default function SignupForm() {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [helperText, setHelperText] = useState('Confirm Password and Passwrod fields should be same.');\n  const [error, setError] = useState(false);\n  const [usernameError, setUsernameError] = useState(false);\n  const [usernameHelperText, setUsernameHelperText] = useState('');\n  const {\n    setOpen\n  } = useContext(OpenContext);\n  const dispatch = useDispatch();\n\n  const signup = e => {\n    e.preventDefault();\n    var check = false;\n\n    if (username.length < 8) {\n      setUsernameError(true);\n      setUsernameHelperText('Username must consist of 8 characters.');\n      check = true;\n    }\n\n    if (password !== confirm) {\n      setError(true);\n      setHelperText(\"Confirm Password field is not same as the Password field.\");\n      check = true;\n    }\n\n    if (check) return;\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8000/auth/signup/\",\n      data: {\n        username: username,\n        password: password,\n        confirm: confirm\n      },\n      withCredentials: true\n    }).then(res => {\n      const data = res.data;\n\n      if (data['Status']) {\n        setOpen(false);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: signup,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [usernameError ? /*#__PURE__*/_jsxDEV(TextField, {\n        error: true,\n        helperText: usernameHelperText,\n        id: \"outlined-textarea\",\n        label: \"Username\",\n        placeholder: \"username\",\n        variant: \"outlined\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-textarea\",\n        label: \"Username\",\n        placeholder: \"username\",\n        variant: \"outlined\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-password-input\",\n        label: \"Password\",\n        type: \"password\",\n        autoComplete: \"current-password\",\n        variant: \"outlined\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(TextField, {\n        error: true,\n        helperText: helperText,\n        id: \"outlined-confirm-password-input\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        autoComplete: \"current-password\",\n        variant: \"outlined\",\n        placeholder: \"confirm password\",\n        value: confirm,\n        onChange: e => {\n          setConfirm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n        helperText: helperText,\n        id: \"outlined-confirm-password-input\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        autoComplete: \"current-password\",\n        variant: \"outlined\",\n        placeholder: \"confirm password\",\n        value: confirm,\n        onChange: e => {\n          setConfirm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"SIGNUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignupForm, \"61bKp6LaTdjEhSWgjhnQEqLlpqA=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["E:/React/react-redux-rest-framework-authentication-system/redux-authentication-system/src/SignUp.js"],"names":["React","useState","makeStyles","TextField","Button","useContext","OpenContext","axios","useDispatch","bindActionCreators","actionCreators","useStyles","theme","root","margin","spacing","width","SignupForm","classes","username","setUsername","password","setPassword","confirm","setConfirm","helperText","setHelperText","error","setError","usernameError","setUsernameError","usernameHelperText","setUsernameHelperText","setOpen","dispatch","signup","e","preventDefault","check","length","method","url","data","withCredentials","then","res","catch","err","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { useContext } from 'react';\r\nimport OpenContext from './OpenContext'\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport actionCreators from \"./state/actions/index\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '35ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SignupForm() {\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirm, setConfirm] = useState('')\r\n\r\n  const [helperText, setHelperText] = useState('Confirm Password and Passwrod fields should be same.')\r\n  const [error, setError] = useState(false)\r\n\r\n  const [usernameError, setUsernameError] = useState(false)\r\n  const [usernameHelperText, setUsernameHelperText] = useState('')\r\n\r\n  const { setOpen} = useContext(OpenContext)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const signup = (e) => {\r\n    e.preventDefault();\r\n    \r\n    var check = false\r\n\r\n    if(username.length < 8) {\r\n      setUsernameError(true)\r\n      setUsernameHelperText('Username must consist of 8 characters.')\r\n      check = true\r\n    }\r\n\r\n    if(password !== confirm) {\r\n      setError(true)\r\n      setHelperText(\"Confirm Password field is not same as the Password field.\")\r\n      check = true\r\n    }\r\n\r\n    if(check) return\r\n\r\n    axios({\r\n      method: \"POST\", \r\n      url: \"http://localhost:8000/auth/signup/\",\r\n      data: {\r\n        username: username,\r\n        password: password, \r\n        confirm: confirm\r\n      }, \r\n      withCredentials: true\r\n    })\r\n    .then(res => {\r\n      const data = res.data\r\n      if(data['Status']) {\r\n        setOpen(false)\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={signup} className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n      {\r\n        usernameError ? \r\n        <TextField\r\n          error\r\n          helperText = {usernameHelperText}\r\n          id=\"outlined-textarea\"\r\n          label=\"Username\"\r\n          placeholder=\"username\"\r\n          variant=\"outlined\"\r\n          value = {username}\r\n          onChange = {(e) => {setUsername(e.target.value)}}\r\n        /> :\r\n        <TextField\r\n          id=\"outlined-textarea\"\r\n          label=\"Username\"\r\n          placeholder=\"username\"\r\n          variant=\"outlined\"\r\n          value = {username}\r\n          onChange = {(e) => {setUsername(e.target.value)}}\r\n        /> \r\n      }\r\n        <br/>\r\n        <TextField\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          placeholder=\"password\"\r\n          value = {password}\r\n          onChange = {(e) => {setPassword(e.target.value)}}\r\n        />\r\n        <br/>\r\n\r\n        {error ? <TextField\r\n          error\r\n          helperText={helperText}\r\n          id=\"outlined-confirm-password-input\"\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          placeholder=\"confirm password\"\r\n          value = {confirm}\r\n          onChange = {(e) => {setConfirm(e.target.value)}}\r\n        /> : <TextField\r\n        helperText={helperText}\r\n        id=\"outlined-confirm-password-input\"\r\n        label=\"Confirm Password\"\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        variant=\"outlined\"\r\n        placeholder=\"confirm password\"\r\n        value = {confirm}\r\n        onChange = {(e) => {setConfirm(e.target.value)}}\r\n      /> }\r\n\r\n        <br/><br/>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">SIGNUP</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}